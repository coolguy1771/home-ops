---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
  namespace: storage
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://operator.min.io/
      chart: minio-operator
      version: 4.3.5
      sourceRef:
        kind: HelmRepository
        name: minio-charts
        namespace: flux-system
      interval: 5m
  values:
    console:
      image:
        repository: minio/console
        tag: v0.12.4
        pullPolicy: IfNotPresent
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          cert-manager.io/cluster-issuer: letsencrypt-prod
        tls:
          - hosts:
              - minio.${SECRET_DOMAIN}
            secretName: minio-tls
        host: minio.${SECRET_DOMAIN}
    tenants:
      # Tenant name
      - name: minio
        ## Registry location and Tag to download MinIO Server image
        image:
          repository: minio/minio
          tag: RELEASE.2021-09-09T21-37-07Z
          pullPolicy: IfNotPresent
        ## Customize namespace for tenant deployment
        namespace: storage
        pools:
          ## Servers specifies the number of MinIO Tenant Pods / Servers in this pool.
          ## For standalone mode, supply 1. For distributed mode, supply 4 or more.
          ## Note that the operator does not support upgrading from standalone to distributed mode.
          - servers: 4
            ## volumesPerServer specifies the number of volumes attached per MinIO Tenant Pod / Server.
            volumesPerServer: 2
            ## size specifies the capacity per volume
            size: 20Gi
            ## storageClass specifies the storage class name to be used for this pool
            storageClassName: "nfs-client"
            accessModes:
              - ReadWriteOnce
        # pool secrets
        secrets:
          # create a kubernetes secret object with the accessKey and secretKey as defined here.
          enabled: true
          name: minio-secret
          accessKey: ${SECRET_S3_ACCESS_KEY}
          secretKey: ${SECRET_S3_KEY}
        # pool metrics to be read by Prometheus
        metrics:
          enabled: true
          port: 9000
        certificate:
          ## Enable automatic Kubernetes based certificate generation and signing as explained in
          ## https://kubernetes.io/docs/tasks/tls/managing-tls-in-a-cluster
          requestAutoCert: true
        ## Enable S3 specific features such as Bucket DNS which would allow `buckets` to be
        ## accessible as DNS entries of form `<bucketname>.minio.default.svc.cluster.local`
        s3:
          ## This feature is turned off by default
          bucketDNS: true
