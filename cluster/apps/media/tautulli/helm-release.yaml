---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: tautulli
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: tautulli
      version: 11.1.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/k8s-at-home/tautulli
      pullPolicy: IfNotPresent
      tag: v2.7.7
    strategy:
      type: Recreate
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: "tautulli.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "tautulli.${SECRET_DOMAIN}"
            secretName: tautulli-tls
    persistence:
      config:
        enabled: true
        storageClass: ceph-block
        emptyDir:
          enabled: false
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 750Mi
    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          privileged: true
