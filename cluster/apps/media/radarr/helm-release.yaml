---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: radarr
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: radarr
      version: 14.0.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: ghcr.io/k8s-at-home/radarr
      pullPolicy: IfNotPresent
      tag: v3.2.2.5080
    strategy:
      type: Recreate
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "nginx"
          hajimari.io/enable: "true"
          hajimari.io/icon: "filmstrip"
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN}"
          external-dns/is-public: "true"
        hosts:
        - host: "radarr.${SECRET_DOMAIN}"
          paths:
          - path: /
            pathType: Prefix
        tls:
        - hosts:
          - "radarr.${SECRET_DOMAIN}"
          secretName: radarr-tls
    persistence:
      config:
        enabled: true
        emptyDir:
          enabled: false
        accessMode: ReadWriteOnce
        storageClass: longhorn
        mountPath: /config
        size: 1Gi
      movies:
        enabled: true
        type: custom
        mountPath: /movies
        readOnly: false
        volumeSpec:
          nfs:
            server: 192.168.1.147
            path: /mnt/user/Media/content/movies
      downloads:
        enabled: true
        type: custom
        mountPath: /downloads
        readOnly: false
        volumeSpec:
          nfs:
            server: 192.168.1.147
            path: /mnt/user/downloads/complete/tv-sonarr
    podSecurityContext:
      runAsUser: 0
      runAsGroup: 0
      supplementalGroups:
      - 100
    prometheus:
      podMonitor:
        enabled: true
        interval: 10m
        scrapeTimeout: 2s
    additionalContainers:
    - name: exportarr
      image: ghcr.io/onedr0p/exportarr:v0.6.1
      imagePullPolicy: IfNotPresent
      args: ["exportarr", "radarr"]
      env:
      - name: PORT
        value: "32123"
      - name: URL
        value: "http://localhost"
      - name: CONFIG
        value: "/config/config.xml"
      - name: ENABLE_UNKNOWN_QUEUE_ITEMS
        value: "true"
      - name: ENABLE_ADDITIONAL_METRICS
        value: "true"
      ports:
      - name: exportarr
        containerPort: 32123
      volumeMounts:
      - name: config
        mountPath: /config
        readOnly: true
    resources:
      requests:
        memory: 250Mi
        cpu: 500m
      limits:
        memory: 1500Mi
