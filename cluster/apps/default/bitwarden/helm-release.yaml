---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: bitwardenrs
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: bitwardenrs
      version: 2.1.10
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    replicaCount: 1
    image:
      repository: vaultwarden/server
      pullPolicy: IfNotPresent
      tag: "1.21.0"
    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""
    bitwardenrs:
      domain: "https://vault.witlinserver.com"
      signupsAllowed: true
      gui:
        # If you set a different port here, you must also provide it under env
        port: 80
      websockets:
        enabled: true
        port: 3012
      admin:
        enabled: true
        disableAdminToken: false
        existingSecret:
          enabled: false
          name: ""
          tokenKey: ""
      # Enable SMTP. https://github.com/dani-garcia/bitwarden_rs/wiki/SMTP-configuration
      smtp:
        enabled: true
        # SMTP hostname, required if SMTP is enabled
        host: "smtp.sendgrid.net"
        # SMTP sender e-mail address, required if SMTP is enabled
        from: "no-reply@witlinserver.com"
        # SMTP sender name, defaults to 'Bitwarden_RS'
        fromName: "Vaultwarden"
        # Enable SSL connection
        ssl: true
        # SMTP port
        port: 587
        # SMTP username
        user: "apikey"
        # SMTP password. Required is user is specified, ignored if no user provided
        password: "${SECRET_BITWARDEN_EMAIL_PASSWORD}"
        # Use existing secret for SMTP authentication
        existingSecret:
          enabled: false
          name: ""
        userKey: ""
        passwordKey: ""
       # Enable Yubikey 2FA: https://github.com/dani-garcia/bitwarden_rs/wiki/Enabling-Yubikey-OTP-authentication
    env: {}
    # If you plan to run the WebUI on a port other than port 80, specify that here:
    # For example, if running the container as a non-root user.
    #  ROCKET_PORT: "80"
    persistence:
      type: statefulset
      enabled: true
      size: 5Gi
      accessMode: ReadWriteOnce
        ## Persistent Volume storage class
      # storageClass: "-"
        ## Use existing Persistent Volume Claim
      # existingClaim:
    serviceAccount:
        # Specifies whether a service account should be created
      create: true
       # Annotations to add to the service account
      annotations: {}
        # The name of the service account to use.
        # If not set and create is true, a name is generated using the fullname template
      name: ""
    podAnnotations: {}
    podSecurityContext: {}
        # fsGroup: 2000
    securityContext: {}
        # capabilities:
        #   drop:
        #   - ALL
        # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000
    service:
      type: ClusterIP
      port: 80
        ## Provide any additional annotations which may be required. This can be used to
        ## set the LoadBalancer service type to internal only.
        ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
        ##
      annotations: {}
      labels: {}
      additionalSpec: {}
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
      #  kubernetes.io/tls-acme: "true"
      hosts:
        - host: vault.witlinserver.com
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: vault.witlinserver.com
          hosts:
            - vault.witlinserver.com

    resources: {}
        # We usually recommend not to specify default resources and to leave this as a conscious
        # choice for the user. This also increases chances charts run on environments with little
        # resources, such as Minikube. If you do want to specify resources, uncomment the following
        # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
        # requests:
        #   cpu: 100m
        #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
        # targetMemoryUtilizationPercentage: 80

    nodeSelector: {}

    tolerations: []

    affinity: {}

    ldapSync:
      enabled: false
        # Configuration file for ldap server connection
      configToml: |-
        bitwarden_url = "http://bitwarden:80"
        bitwarden_admin_token = "admin"
        ldap_host = "ldap"
        ldap_bind_dn = "cn=admin,dc=example,dc=org"
        ldap_bind_password = "admin"
        ldap_search_base_dn = "dc=example,dc=org"
        ldap_search_filter = "(&(objectClass=*)(uid=*))"
        ldap_sync_interval_seconds = 10
      # Use existing secret for config.toml
      existingSecret: ""
        # Add extra containers
      extraContainers: []
          # - name: vpn
          #   image: dperson/openvpn-client
          #   command: ["/bin/sh","-c"]
          #   args: ["openvpn --config 'vpn/client.ovpn' --script-security 3;"]
          #   stdin: true
          #   tty: true
          #   securityContext:
          #     privileged: true
          #     capabilities:
          #       add:
          #         - NET_ADMIN
          #   env:
          #     - name: DE
          #       value: "Berlin"
          #   volumeMounts:
          #     - name: bitwardenrs-vpn
          #       mountPath: /vpn/client.ovpn
          #       subPath: client.ovpn
        # Add extra volumes
      extraVolumes: []
          # - name: bitwarden-vpn
          #   secret:
          #     secretName: bitwardenrs-vpn
          #     items:
          #       - key: client.ovpn
          #         path: client.ovpn
