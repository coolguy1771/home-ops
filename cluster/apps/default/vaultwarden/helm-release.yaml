---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: default
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: vaultwarden
      version: 3.1.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: vaultwarden/server
      pullPolicy: IfNotPresent
      tag: 1.22.2
    strategy:
      type: Recreate
    # See more environment variables in the Vaultwarden documentation
    # https://github.com/dani-garcia/vaultwarden/blob/main/.env.template
    env:
      # TZ:
      DATA_FOLDER: "config"
      DOMAIN: "https://vault.${SECRET_DOMAIN}"
      SIGNUPS_ALLOWED: true
      ADMIN_TOKEN: "${SECRET_VAULTWARDEN_ADMIN_TOKEN}"
      SMTP_HOST: "in-v3.mailjet.com"
      SMTP_FROM: "no-reply@${SECRET_DOMIAN}"
      SMTP_SSL: true
      SMTP_PORT: 587
      SMTP_USERNAME: "${SECRET_EMAIL_USERNAME}"
      SMTP_PASSWORD: "${SECRET_EMAIL_PASSWORD}"
      WEBSOCKET_ADDRESS: 0.0.0.0
      WEBSOCKET_ENABLED: true
      WEBSOCKET_PORT: 3012
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: "traefik"
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          external-dns/is-public: "true"
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          hajimari.io/icon: "shield-key"
        hosts:
          - host: vault.${SECRET_DOMIAN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  port: 80
              - path: /notifications/hub/negotiate
                pathType: Prefix
                service:
                  port: 80
              - path: /notifications/hub
                pathType: Prefix
                service:
                  port: 3012
        tls:
          - secretName: vaultwarden-tls
            hosts:
              - vault.${SECRET_DOMIAN}
    persistence:
      config:
        enabled: true
        storageClass: nfs-client
      #  existingClaim: vaultwarden-config
    # https://github.com/bitnami/charts/tree/master/bitnami/postgresql/#installing-the-chart
    postgresql:
      enabled: true
      postgresqlUsername: "vaultwarden"
      postgresqlPassword: "${SECRET_VAULTWARDEN_DATABASE_PASSWORD}"
      postgresqlDatabase: "vaultwarden"
      updateStrategy:
        type: RollingUpdate
      persistence:
        enabled: true
        storageClass: rook-ceph-block
        accessModes:
          - ReadWriteOnce
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
      secret.reloader.stakater.com/reload: "vaultwarden"
    resources:
      requests:
        memory: 100Mi
        cpu: 100m
      limits:
        memory: 2000Mi
    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /config
        securityContext:
          privileged: true
