---
data_dir: /vector-data-dir
api:
  enabled: true
  address: 0.0.0.0:8686

enrichment_tables:
  geoip_table:
    type: geoip
    path: /usr/share/GeoIP/GeoLite2-City.mmdb

#
# Sources
#

sources:
  talos_kernel_logs:
    address: 0.0.0.0:6050
    type: socket
    mode: udp
    max_length: 102400
    decoding:
      codec: json
    host_key: __host

  talos_service_logs:
    address: 0.0.0.0:6051
    type: socket
    mode: udp
    max_length: 102400
    decoding:
      codec: json
    host_key: __host

  kubernetes_source:
    type: vector
    version: "2"
    address: 0.0.0.0:6010

  vyos_source:
    type: vector
    version: "2"
    address: 0.0.0.0:6020

  journald_source:
    type: vector
    version: "2"
    address: 0.0.0.0:6000

#
# Transforms
#

transforms:
  # talos_kernel_logs_xform:
  #   type: remap
  #   inputs: ["talos_kernel_logs"]
  #   source: |
  #     .__host = replace(".__host", "10.10.10.20, "k8s-0")
  #     .__host = replace(".__host", "10.10.10.21", "k8s-1")
  #     .__host = replace(".__host", "10.10.10.22", "k8s-2")
  #     .__host = replace(".__host", "10.10.10.23", "k8s-3")
  #     .__host = replace(".__host", "10.10.10.24", "k8s-4")
  #     .__host = replace(".__host", "10.10.10.25", "k8s-5")
  #     .__host = replace(".__host", "10.10.10.26", "k8s-6")
  # talos_service_logs_xform:
  #   type: remap
  #   inputs: ["talos_service_logs"]
  #   source: |
  #     .__host = replace(".__host", "10.10.10.20, "k8s-0")
  #     .__host = replace(".__host", "10.10.10.21", "k8s-1")
  #     .__host = replace(".__host", "10.10.10.22", "k8s-2")
  #     .__host = replace(".__host", "10.10.10.23", "k8s-3")
  #     .__host = replace(".__host", "10.10.10.24", "k8s-4")
  #     .__host = replace(".__host", "10.10.10.25", "k8s-5")
  #     .__host = replace(".__host", "10.10.10.26", "k8s-6")
  kubernetes_remap:
    type: remap
    inputs: ["kubernetes_source"]
    source: |
      # Standardize 'app' index
      .custom_app_name = .pod_labels."app.kubernetes.io/name" || .pod_labels.app || .pod_labels."k8s-app" || "unknown"

  # [63950.153039] [wan-local-default-D]IN=eth4 OUT= MAC=xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx SRC=xxx.xxx.xxx.xxx DST=xxx.xxx.xxx.xxx LEN=40 TOS=0x00 PREC=0x00 TTL=240 ID=60610 PROTO=TCP SPT=53451 DPT=2002 WINDOW=1024 RES=0x00 SYN URGP=0
  vyos_firewall_route:
    type: route
    inputs: ["vyos_source"]
    route:
      # Match incoming WAN firewall messages only
      firewall: |
        .facility == "kern" && match!(.message, r'^\[\d+\.\d+\]\s\[wan-.*\]')
  vyos_firewall_remap:
    type: remap
    inputs: ["vyos_firewall_route.firewall"]
    source: |
      # Parse firewall rule message
      split_message, split_err = parse_regex(.message, r'^\[\d+\.\d+\]\s\[(?P<rule>.*?)\](?P<fields>.*)')
      if split_err != null {
          abort
      }
      # Extract separate fields from message
      split_message.fields, split_err = strip_whitespace(split_message.fields)
      if split_err != null {
          abort
      }
      .message, parse_err = parse_key_value(split_message.fields, whitespace: "strict")
      if parse_err != null {
          abort
      }
  vyos_firewall_geoip_remap:
    type: remap
    inputs: ["vyos_firewall_remap"]
    source: |
      .geoip = get_enrichment_table_record!(
          "geoip_table", {
              "ip": .message.SRC
          }
      )
# Sinks
sinks:
  kubernetes:
    inputs: ["kubernetes_remap"]
    type: loki
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    batch:
      max_bytes: 2049000
    encoding:
      codec: json
    labels:
      app: '{{ custom_app_name }}'
      namespace: '{{ kubernetes.pod_namespace }}'
      node: '{{ kubernetes.pod_node_name }}'
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true

  vyos:
    inputs: ["vyos_firewall_geoip_remap"]
    type: loki
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    batch:
      max_bytes: 2049000
    encoding:
      codec: json
    labels:
      hostname: vyos
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true

  journal:
    type: loki
    inputs: ["journald_source"]
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding:
      codec: json
    batch:
      max_bytes: 2049000
    out_of_order_action: accept
    remove_label_fields: true
    remove_timestamp: true
    labels:
      hostname: '{{ host }}'

  talos_kernel:
    type: loki
    inputs: ["talos_kernel_logs"]
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding:
      codec: json
      except_fields: ["__host"]
    batch:
      max_bytes: 1048576
    out_of_order_action: rewrite_timestamp
    labels:
      hostname: '{{ __host }}'
      service: '{{ facility }}'

  talos_service:
    type: loki
    inputs: ["talos_service_logs"]
    endpoint: http://loki-gateway.monitoring.svc.cluster.local
    encoding:
      codec: json
      except_fields: ["__host"]
    batch:
      max_bytes: 524288
    out_of_order_action: rewrite_timestamp
    labels:
      hostname: '{{ __host }}'
      service: "talos-service"
      namespace: "talos:service"
