---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/qbittorrent
      tag: 4.5.5@sha256:16ddd3697593e8f0e82de2b2eae4edbe1b67eb04936cdb2dccae79fda3338850
    env:
      TZ: America/New_York
      QBITTORRENT__PORT: &port 80
      QBITTORRENT__BT_PORT: &bittorrentPort 50413
      QBT_Preferences__WebUI__AlternativeUIEnabled: "false"
      QBT_Preferences__WebUI__RootFolder: ""
    service:
      main:
        ports:
          http:
            port: *port
      bittorrent:
        enabled: true
        type: LoadBalancer
        loadBalancerIP: "${SVC_QBITTORRENT_ADDR}"
        ports:
          bittorrent:
            enabled: true
            port: *bittorrentPort
            protocol: TCP
            targetPort: *bittorrentPort
        externalTrafficPolicy: Local
    ingress:
      main:
        enabled: true
        ingressClassName: cilium
        annotations:
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_hide_header "x-webkit-csp";
            proxy_hide_header "content-security-policy";
            proxy_hide_header "X-Frame-Options";
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_PUBLIC_DOMAIN}/css/base/qbittorrent/nord.css"></head>';
            sub_filter_once on;
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: &host qb.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 1Gi
        storageClass: ceph-block
    # Note: If downloading very large torrents it might be worth using NFS for your download directory.
    # Beware if you are downloading torrents directly to a ZFS dataset that dataset will accrue fragmentation.
    persistence:
      media:
        enabled: true
        type: nfs
        server: "osiris.${SECRET_PRIVATE_DOMAIN}"
        path: /pluto/media
        mountPath: /media
      incomplete:
        enabled: true
        type: emptyDir
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    resources:
      requests:
        cpu: 10m
        memory: 250Mi
      limits:
        memory: 6000Mi
