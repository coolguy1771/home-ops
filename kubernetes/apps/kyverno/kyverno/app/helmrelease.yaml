---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kyverno
  namespace: kyverno
spec:
  interval: 30m
  chart:
    spec:
      chart: kyverno
      version: 3.0.5
      sourceRef:
        kind: HelmRepository
        name: kyverno
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    crds:
      install: true
    grafana:
      enabled: true
      annotations:
        grafana_folder: System
      grafanaDashboard:
        create: true
    backgroundController:
      serviceMonitor:
        enabled: true
      rbac:
        clusterRole:
          extraResources:
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - create
                - update
                - patch
                - delete
                - get
                - list
    cleanupController:
      serviceMonitor:
        enabled: true
    reportsController:
      serviceMonitor:
        enabled: true
    admissionController:
      replicas: 3
      serviceMonitor:
        enabled: true
      tracing:
        enabled: true
        address: tempo.monitoring.svc
        port: 4317

      metering:
        # -- Disable metrics export
        disabled: true
        # -- Otel configuration, can be `prometheus` or `grpc`
        config: prometheus
        # -- Prometheus endpoint port
        port: 8000
        # -- Otel collector endpoint
        collector: ''
        # -- Otel collector credentials
        creds: ''
      rbac:
        clusterRole:
          extraResources:
            - apiGroups:
                - ""
              resources:
                - pods
              verbs:
                - create
                - update
                - delete
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: kyverno
              app.kubernetes.io/component: kyverno


    # Admission controller configuration
    admissionController:
      tracing:
        # -- Enable tracing
        enabled: true
        # -- Traces receiver address
        address:
        # -- Traces receiver port
        port:
        # -- Traces receiver credentials
        creds: ''

      metering:
        # -- Disable metrics export
        disabled: true
        # -- Otel configuration, can be `prometheus` or `grpc`
        config: prometheus
        # -- Prometheus endpoint port
        port: 8000
        # -- Otel collector endpoint
        collector: ''
        # -- Otel collector credentials
        creds: ''

    # Background controller configuration
    backgroundController:

      tracing:
        # -- Enable tracing
        enabled: true
        # -- Traces receiver address
        address:
        # -- Traces receiver port
        port:
        # -- Traces receiver credentials
        creds: ''

      metering:
        # -- Disable metrics export
        disabled: true
        # -- Otel configuration, can be `prometheus` or `grpc`
        config: prometheus
        # -- Prometheus endpoint port
        port: 8000
        # -- Otel collector endpoint
        collector: ''
        # -- Otel collector credentials
        creds: ''

    # Cleanup controller configuration
    cleanupController:

      tracing:
        # -- Enable tracing
        enabled: true
        # -- Traces receiver address
        address:
        # -- Traces receiver port
        port:
        # -- Traces receiver credentials
        creds: ''

      metering:
        # -- Disable metrics export
        disabled: true
        # -- Otel configuration, can be `prometheus` or `grpc`
        config: prometheus
        # -- Prometheus endpoint port
        port: 8000
        # -- Otel collector endpoint
        collector: ''
        # -- Otel collector credentials
        creds: ''

    # Reports controller configuration
    reportsController:

      # -- Overrides features defined at the root level
      featuresOverride: {}

      # -- Enable reports controller.
      enabled: true

      rbac:
        # -- Create RBAC resources
        create: true

        serviceAccount:
          # -- Service account name
          name:

          # -- Annotations for the ServiceAccount
          annotations: {}
            # example.com/annotation: value

        clusterRole:
          # -- Extra resource permissions to add in the cluster role
          extraResources: []
          # - apiGroups:
          #     - ''
          #   resources:
          #     - pods

      image:
        # -- Image registry
        registry: ghcr.io
        # -- Image repository
        repository: kyverno/reports-controller
        # -- (string) Image tag
        # Defaults to appVersion in Chart.yaml if omitted
        tag: ~
        # -- Image pull policy
        pullPolicy: IfNotPresent

      # -- Image pull secrets
      imagePullSecrets: []
        # - secretName

      # -- (int) Desired number of pods
      replicas: ~

      # -- Additional labels to add to each pod
      podLabels: {}
      # example.com/label: foo

      # -- Additional annotations to add to each pod
      podAnnotations: {}
      # example.com/annotation: foo

      # -- Deployment update strategy.
      # Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
      # @default -- See [values.yaml](values.yaml)
      updateStrategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 40%
        type: RollingUpdate

      # -- Optional priority class
      priorityClassName: ''

      # -- Change `apiPriorityAndFairness` to `true` if you want to insulate the API calls made by Kyverno reports controller activities.
      # This will help ensure Kyverno reports stability in busy clusters.
      # Ref: https://kubernetes.io/docs/concepts/cluster-administration/flow-control/
      apiPriorityAndFairness: false

      # -- Priority level configuration.
      # The block is directly forwarded into the priorityLevelConfiguration, so you can use whatever specification you want.
      # ref: https://kubernetes.io/docs/concepts/cluster-administration/flow-control/#prioritylevelconfiguration
      # @default -- See [values.yaml](values.yaml)
      priorityLevelConfigurationSpec:
        type: Limited
        limited:
          nominalConcurrencyShares: 10
          limitResponse:
            queuing:
              queueLengthLimit: 50
            type: Queue

      # -- Change `hostNetwork` to `true` when you want the pod to share its host's network namespace.
      # Useful for situations like when you end up dealing with a custom CNI over Amazon EKS.
      # Update the `dnsPolicy` accordingly as well to suit the host network mode.
      hostNetwork: false

      # -- `dnsPolicy` determines the manner in which DNS resolution happens in the cluster.
      # In case of `hostNetwork: true`, usually, the `dnsPolicy` is suitable to be `ClusterFirstWithHostNet`.
      # For further reference: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/#pod-s-dns-policy.
      dnsPolicy: ClusterFirst

      # -- Extra arguments passed to the container on the command line
      extraArgs: {}

      # -- Additional container environment variables.
      extraEnvVars: []

      resources:
        # -- Pod resource limits
        limits:
          memory: 128Mi
        # -- Pod resource requests
        requests:
          cpu: 100m
          memory: 64Mi

      # -- Node labels for pod assignment
      nodeSelector: {}

      # -- List of node taints to tolerate
      tolerations: []

      antiAffinity:
        # -- Pod antiAffinities toggle.
        # Enabled by default but can be disabled if you want to schedule pods to the same node.
        enabled: true

      # -- Pod anti affinity constraints.
      # @default -- See [values.yaml](values.yaml)
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - reports-controller
              topologyKey: kubernetes.io/hostname

      # -- Pod affinity constraints.
      podAffinity: {}

      # -- Node affinity constraints.
      nodeAffinity: {}

      # -- Topology spread constraints.
      topologySpreadConstraints: []

      # -- Security context for the pod
      podSecurityContext: {}

      # -- Security context for the containers
      securityContext:
        runAsNonRoot: true
        privileged: false
        allowPrivilegeEscalation: false
        readOnlyRootFilesystem: true
        capabilities:
          drop:
            - ALL
        seccompProfile:
          type: RuntimeDefault

      podDisruptionBudget:
        # -- Configures the minimum available pods for disruptions.
        # Cannot be used if `maxUnavailable` is set.
        minAvailable: 1
        # -- Configures the maximum unavailable pods for disruptions.
        # Cannot be used if `minAvailable` is set.
        maxUnavailable:

      # -- A writable volume to use for the TUF root initialization.
      tufRootMountPath: /.sigstore

      # -- Volume to be mounted in pods for TUF/cosign work.
      sigstoreVolume:
        emptyDir: {}

      metricsService:
        # -- Create service.
        create: true
        # -- Service port.
        # Metrics server will be exposed at this port.
        port: 8000
        # -- Service type.
        type: ClusterIP
        # -- (string) Service node port.
        # Only used if `type` is `NodePort`.
        nodePort: ~
        # -- Service annotations.
        annotations: {}

      networkPolicy:

        # -- When true, use a NetworkPolicy to allow ingress to the webhook
        # This is useful on clusters using Calico and/or native k8s network policies in a default-deny setup.
        enabled: false

        # -- A list of valid from selectors according to https://kubernetes.io/docs/concepts/services-networking/network-policies.
        ingressFrom: []

      serviceMonitor:
        # -- Create a `ServiceMonitor` to collect Prometheus metrics.
        enabled: false
        # -- Additional labels
        additionalLabels: {}
        # -- (string) Override namespace
        namespace: ~
        # -- Interval to scrape metrics
        interval: 30s
        # -- Timeout if metrics can't be retrieved in given time interval
        scrapeTimeout: 25s
        # -- Is TLS required for endpoint
        secure: false
        # -- TLS Configuration for endpoint
        tlsConfig: {}
        # -- RelabelConfigs to apply to samples before scraping
        relabelings: []
        # -- MetricRelabelConfigs to apply to samples before ingestion.
        metricRelabelings: []

      tracing:
        # -- Enable tracing
        enabled: true
        # -- (string) Traces receiver address
        address: ~
        # -- (string) Traces receiver port
        port: ~
        # -- (string) Traces receiver credentials
        creds: ~

      metering:
        # -- Disable metrics export
        disabled: true
        # -- Otel configuration, can be `prometheus` or `grpc`
        config: prometheus
        # -- Prometheus endpoint port
        port: 8000
        # -- (string) Otel collector endpoint
        collector: ~
        # -- (string) Otel collector credentials
        creds: ~
