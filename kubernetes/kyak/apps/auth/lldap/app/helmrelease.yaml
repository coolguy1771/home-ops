---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lldap
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      lldap:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: lldap-secret
        containers:
          app:
            image:
              repository: ghcr.io/lldap/lldap
              tag: v0.5.0@sha256:f0f5d92cd6c6dca9415993cfc57919f0618e87090b323a98c1536975860fa45a
            env:
              TZ: America/New_York
              LLDAP_HTTP_PORT: &port 80
              LLDAP_HTTP_URL: https://lldap.${SECRET_PUBLIC_DOMAIN}
              LLDAP_LDAP_PORT: &ldapPort 389
              LLDAP_LDAP_BASE_DN: dc=home,dc=arpa
              LLDAP_SMTP_OPTIONS__ENABLE_PASSOWRD_RESET: true
              LLDAP_SMTP_OPTIONS__HOST: smtp-relay.auth.svc.cluster.local
              LLDAP_SMTP_OPTIONS__PORT: 25
              LLDAP_SMTP_OPTIONS__FROM: LLDAP Admin <lldapadmin@286k.co>
              LLDAP_SMTP_OPTIONS__REPLY_TO: No Reply <no-reply@286k.co>
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: *app
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
          ldap:
            enabled: true
            port: 389
            protocol: TCP
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_PUBLIC_DOMAIN}
        hosts:
          - host: &host lldap.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
    serviceMonitor:
      app:
        serviceName: *app
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    persistence:
      data:
        type: emptyDir
