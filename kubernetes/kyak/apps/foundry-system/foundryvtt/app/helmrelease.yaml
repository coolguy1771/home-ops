---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: foundryvtt
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      foundryvtt:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/felddy/foundryvtt
              tag: 12.331.0@sha256:306930efe642caa5541add4e269127a3a9122e007496bb22b524f7d9bcc755fc
            env:
              FOUNDRY_HOSTNAME: &host "foundry.${SECRET_PUBLIC_DOMAIN}"
              FOUNDRY_LOCAL_HOSTNAME: *host
              FOUNDRY_CSS_THEME: "scifi"
              CONTAINER_CACHE: /data/container_cache
              CONTAINER_PATCHES: /data/container_patches
              CONTAINER_VERBOSE: "true"
              FOUNDRY_TELEMETRY: false
              FOUNDRY_MINIFY_STATIC_FILES: "true"
              FOUNDRY_PROTOCOL: "4"
              FOUNDRY_PROXY_PORT: "443"
              FOUNDRY_PROXY_SSL: "true"
              CONTAINER_PATCH_URLS: https://gist.githubusercontent.com/felddy/a02d66c3817f8223652d96febe580153/raw/foundryvtt-module-check.sh
            envFrom:
              - secretRef:
                  name: foundryvtt-secret
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 30000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: false
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 4Gi
    defaultPodOptions:
      automountServiceAccountToken: false
      securityContext:
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: foundryvtt
        ports:
          http:
            port: 30000
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_PUBLIC_DOMAIN}
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/proxy-body-size: 4096m
        hosts:
          - host: &host "foundry.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
    # route:
    #   app:
    #     enabled: true
    #     kind: HTTPRoute
    #     annotations:
    #       cert-manager.io/cluster-issuer: letsencrypt-production
    #     parentRefs:
    #       - name: istio-gateway
    #         namespace: istio-ingress
    #     hostnames:
    #       - "foundry.${SECRET_PUBLIC_DOMAIN}"
    #     rules:
    #       - backendRefs:
    #         - name: foundryvtt
    #           port: 30000
    #         matches:
    #         - path:
    #             type: PathPrefix
    #             value: /
    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: foundryvtt
