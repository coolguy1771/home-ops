---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: foundryvtt
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      foundryvtt:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: docker.io/felddy/foundryvtt
              tag: 12.328.0@sha256:6c4fb88134aab18c8a5da8df8a16796a186dc4f2d8402190ac78bd8ed30a85e1
            env:
              FOUNDRY_HOSTNAME: "foundry.${SECRET_PUBLIC_DOMAIN}"
              FOUNDRY_CSS_THEME: "scifi"
              CONTAINER_VERBOSE: "true"
              FOUNDRY_MINIFY_STATIC_FILES: "true"
              FOUNDRY_PROTOCOL: "4"
              FOUNDRY_PROXY_PORT: "443"
              FOUNDRY_PROXY_SSL: "true"
              FOUNDRY_COMPRESS_WEBSOCKET: "true"
              FOUNDRY_TELEMETRY: "false"
            envFrom:
              - secretRef:
                  name: foundryvtt-secret
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: 30000
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: false
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 4Gi
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 568
    #     runAsGroup: 568
    #     fsGroup: 568
    #     fsGroupChangePolicy: OnRootMismatch
    #     supplementalGroups: [10000]
    #     seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: foundryvtt
        ports:
          http:
            port: 30000
    ingress:
      app:
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_PUBLIC_DOMAIN}
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/proxy-body-size: 4096m
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_headers_hash_bucket_size 128;
            proxy_headers_hash_max_size 1024;
            proxy_redirect http:// $scheme://;
            proxy_cache_bypass $cookie_session;
            proxy_no_cache $cookie_session;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Early-Data $ssl_early_data;
            proxy_set_header Host $host;
            proxy_set_header Proxy "";
            proxy_set_header Upgrade $http_upgrade;
        hosts:
          - host: &host "foundry.${SECRET_PUBLIC_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts: [*host]
    persistence:
      data:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: foundryvtt
