---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: loki
      version: 5.39.0
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    loki:
      structuredConfig:
        auth_enabled: false
        server:
          log_level: info
          http_listen_port: 3100
          grpc_listen_port: 9095
        memberlist:
          join_members: ["loki-memberlist"]
        limits_config:
          retention_period: 14d
          enforce_metric_name: false
          reject_old_samples: true
          reject_old_samples_max_age: 168h
          max_cache_freshness_per_query: 10m
          split_queries_by_interval: 15m
          ingestion_rate_mb: 50
          ingestion_burst_size_mb: 1000
          per_stream_rate_limit: 5MB
          per_stream_rate_limit_burst: 20MB
          shard_streams:
            enabled: true
        schema_config:
          configs:
            - from: "2022-01-11" # quote
              store: boltdb-shipper
              object_store: s3
              schema: v12
              index:
                prefix: loki_index_
                period: 24h
        common:
          path_prefix: /var/loki
          replication_factor: 2
          storage:
            s3:
              endpoint: '$S3_ENDPOINT'
              bucketnames: '$BUCKET_NAME'
              accessKeyId: '$ACCESS_KEY_ID'
              secretAccessKey: '$SECRET_ACCESS_KEY'
              insecure: true
          ring:
            kvstore:
              store: memberlist
        ruler:
          enable_api: true
          enable_alertmanager_v2: true
          alertmanager_url: http://alertmanager-operated.monitoring.svc.cluster.local:9093
          storage:
            type: local
            local:
              directory: /rules
          rule_path: /tmp/scratch
          ring:
            kvstore:
              store: memberlist
        distributor:
          ring:
            kvstore:
              store: memberlist
        compactor:
          working_directory: /var/loki/boltdb-shipper-compactor
          shared_store: s3
          compaction_interval: 10m
          retention_enabled: true
          retention_delete_delay: 2h
          retention_delete_worker_count: 150
        ingester:
          max_chunk_age: 1h
          lifecycler:
            ring:
              kvstore:
                store: memberlist
        analytics:
          reporting_enabled: false
    gateway:
      replicas: 2
      image:
        registry: ghcr.io
      ingress:
        enabled: true
        ingressClassName: internal
        hosts:
          - host: &host loki.${SECRET_PUBLIC_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: istio-prod-cert-tls
    read:
      replicas: 2
      persistence:
        storageClass: ceph-block
      extraVolumeMounts:
        - name: rules
          mountPath: /rules
      extraVolumes:
        - name: rules
          emptyDir: {}
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: thanos-bucket-v2
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: thanos-bucket-v2
              key: AWS_SECRET_ACCESS_KEY
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: thanos-bucket-v2
              key: BUCKET_HOST
        - name: BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: thanos-bucket-v2
              key: BUCKET_NAME
    write:
      replicas: 2
      persistence:
        storageClass: ceph-block
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: thanos-bucket-v2
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: thanos-bucket-v2
              key: AWS_SECRET_ACCESS_KEY
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: thanos-bucket-v2
              key: BUCKET_HOST
        - name: BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: thanos-bucket-v2
              key: BUCKET_NAME
    backend:
      replicas: 2
      extraArgs:
        - '-config.expand-env=true'
      extraEnv:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: thanos-bucket-v2
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: thanos-bucket-v2
              key: AWS_SECRET_ACCESS_KEY
        - name: S3_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: thanos-bucket-v2
              key: BUCKET_HOST
        - name: BUCKET_NAME
          valueFrom:
            configMapKeyRef:
              name: thanos-bucket-v2
              key: BUCKET_NAME
      persistence:
        storageClass: ceph-block
      extraVolumeMounts:
        - name: rules
          mountPath: /rules/fake
        - name: scratch
          mountPath: /tmp/scratch
      extraVolumes:
        - name: rules
          configMap:
            name: loki-alerting-rules
        - name: scratch
          emptyDir: {}
    monitoring:
      dashboards:
        annotations:
          grafana_folder: Loki
      serviceMonitor:
        enabled: false
        metricsInstance:
          enabled: false
      selfMonitoring:
        enabled: false
        grafanaAgent:
          installOperator: false
      lokiCanary:
        enabled: false
    test:
      enabled: false
