---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kiali-operator
  namespace: istio-system
spec:
  interval: 15m
  chart:
    spec:
      chart: kiali-operator
      version: 2.1.0
      sourceRef:
        kind: HelmRepository
        name: kiali
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  valuesFrom:
    - kind: Secret
      name: kiali-grafana-token
  values:
    resources:
      requests:
        cpu: "10m"
        memory: "64Mi"
    replicaCount: 2
    # For what a Kiali CR spec can look like, see:
    # https://github.com/kiali/kiali-operator/blob/master/deploy/kiali/kiali_cr.yaml
    cr:
      create: true
      name: kiali
      namespace: "istio-system"
      annotations: {}
      spec:
        istio_labels:
          app_label_name: "app.kubernetes.io/name"
          version_label_name: "app.kubernetes.io/version"
        server:
          web_fqdn: kiali.${SECRET_PUBLIC_DOMAIN}
          web_port: 443
          web_root: /
          web_schema: https
        deployment:
          replicas: 2
          ingress:
            enabled: true
            override_yaml:
              metadata:
                annotations:
                  nginx.ingress.kubernetes.io/backend-protocol: HTTP
                  nginx.ingress.kubernetes.io/secure-backends: "false"
                  external-dns.alpha.kubernetes.io/target: external.${SECRET_PUBLIC_DOMAIN}
                  cert-manager.io/cluster-issuer: letsencrypt-production
              spec:
                ingressClassName: external
                rules:
                  - host: kiali.${SECRET_PUBLIC_DOMAIN}
                    http:
                      paths:
                        - path: /
                          pathType: Prefix
                          backend:
                            service:
                              name: kiali
                              port:
                                number: 20001
                tls:
                  - hosts:
                      - kiali.${SECRET_PUBLIC_DOMAIN}
                    secretName: kiali-tls
        auth:
          strategy: openid
          openid:
            client_id: "kiali"
            issuer_uri: "https://auth.${SECRET_PUBLIC_DOMAIN}"
            disable_rbac: true
            insecure_skip_verify_tls: true
        istio_namespace: "istio-system"
        external_services:
          istio:
            root_namespace: istio-system
          prometheus:
            url: http://thanos-query.monitoring.svc.cluster.local:10902
            thanos_proxy:
              enabled: true
              retention_period: "14d"
              scrape_interval: "30s"
          grafana:
            auth:
              type: bearer
            enabled: true
            in_cluster_url: http://grafana.monitoring.svc.cluster.local/
            url: https://grafana.${SECRET_PUBLIC_DOMAIN}
            dashboards:
              - name: "Istio Service Dashboard"
                variables:
                  namespace: "var-namespace"
                  service: "var-service"
              - name: "Istio Workload Dashboard"
                variables:
                  namespace: "var-namespace"
                  workload: "var-workload"
              - name: "Istio Mesh Dashboard"
              - name: "Istio Control Plane Dashboard"
              - name: "Istio Performance Dashboard"
              - name: "Istio Wasm Extension Dashboard"