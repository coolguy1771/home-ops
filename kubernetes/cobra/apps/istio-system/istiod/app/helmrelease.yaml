---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app istiod
spec:
  interval: 15m
  chart:
    spec:
      chart: istiod
      version: 1.20.1
      sourceRef:
        kind: HelmRepository
        name: istio
        namespace: flux-system
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    sidecarInjectorWebhook:
      reinvocationPolicy: IfNeeded

    istiodRemote:
      # Sidecar injector mutating webhook configuration clientConfig.url value.
      # For example: https://$remotePilotAddress:15017/inject
      # The host should not refer to a service running in the cluster; use a service reference by specifying
      # the clientConfig.service field instead.
      injectionURL: ""

      # Sidecar injector mutating webhook configuration path value for the clientConfig.service field.
      # Override to pass env variables, for example: /inject/cluster/remote/net/network2
      injectionPath: "/inject"
    telemetry:
      enabled: true
      v2:
        # For Null VM case now.
        # This also enables metadata exchange.
        enabled: true
        metadataExchange:
          # Indicates whether to enable WebAssembly runtime for metadata exchange filter.
          wasmEnabled: false
        # Indicate if prometheus stats filter is enabled or not
        prometheus:
          enabled: true
          # Indicates whether to enable WebAssembly runtime for stats filter.
          wasmEnabled: false
          # overrides stats EnvoyFilter configuration.
          configOverride:
            gateway: {}
            inboundSidecar: {}
            outboundSidecar: {}
        # stackdriver filter settings.
        stackdriver:
          enabled: false
          logging: false
          monitoring: false
          topology: false # deprecated. setting this to true will have no effect, as this option is no longer supported.
          disableOutbound: false
          #  configOverride parts give you the ability to override the low level configuration params passed to envoy filter.

          configOverride: {}
          #  e.g.
          #  disable_server_access_logging: false
          #  disable_host_header_fallback: true
        # Access Log Policy Filter Settings. This enables filtering of access logs from stackdriver.
        accessLogPolicy:
          enabled: false
          # To reduce the number of successful logs, default log window duration is
          # set to 12 hours.
          logWindowDuration: "43200s"
    # meshConfig defines runtime configuration of components, including Istiod and istio-agent behavior
    # See https://istio.io/docs/reference/config/istio.mesh.v1alpha1/ for all available options
    meshConfig:
      enablePrometheusMerge: true
    global:
      # Used to locate istiod.
      istioNamespace: istio-system
      # List of cert-signers to allow "approve" action in the istio cluster role
      #
      # certSigners:
      #   - clusterissuers.cert-manager.io/istio-ca
      certSigners: []
      # enable pod disruption budget for the control plane, which is used to
      # ensure Istio control plane components are gradually upgraded or recovered.
      defaultPodDisruptionBudget:
        enabled: true
        # The values aren't mutable due to a current PodDisruptionBudget limitation
        # minAvailable: 1

      # A minimal set of requested resources to applied to all deployments so that
      # Horizontal Pod Autoscaler will be able to function (if set).
      # Each component can overwrite these default values by adding its own resources
      # block in the relevant section below and setting the desired resources values.
      defaultResources:
        requests:
          cpu: 10m
        #   memory: 128Mi
        # limits:
        #   cpu: 100m
        #   memory: 128Mi
      omitSidecarInjectorConfigMap: false

      # Whether to restrict the applications namespace the controller manages;
      # If not set, controller watches all namespaces
      oneNamespace: false
      proxy_init:
        # Base name for the proxy_init container, used to configure iptables.
        image: proxyv2

      # configure remote pilot and istiod service and endpoint
      remotePilotAddress: ""

      ##############################################################################################
      # The following values are found in other charts. To effectively modify these values, make   #
      # make sure they are consistent across your Istio helm charts                                #
      ##############################################################################################

      # The customized CA address to retrieve certificates for the pods in the cluster.
      # CSR clients such as the Istio Agent and ingress gateways can use this to specify the CA endpoint.
      # If not set explicitly, default to the Istio discovery address.
      caAddress: ""

      # Configure a remote cluster data plane controlled by an external istiod.
      # When set to true, istiod is not deployed locally and only a subset of the other
      # discovery charts are enabled.
      externalIstiod: false

      # Configure a remote cluster as the config cluster for an external istiod.
      configCluster: false

      # Configure the policy for validating JWT.
      # Currently, two options are supported: "third-party-jwt" and "first-party-jwt".
      jwtPolicy: "third-party-jwt"

      # Mesh ID means Mesh Identifier. It should be unique within the scope where
      # meshes will interact with each other, but it is not required to be
      # globally/universally unique. For example, if any of the following are true,
      # then two meshes must have different Mesh IDs:
      # - Meshes will have their telemetry aggregated in one place
      # - Meshes will be federated together
      # - Policy will be written referencing one mesh from the other
      #
      # If an administrator expects that any of these conditions may become true in
      # the future, they should ensure their meshes have different Mesh IDs
      # assigned.
      #
      # Within a multicluster mesh, each cluster must be (manually or auto)
      # configured to have the same Mesh ID value. If an existing cluster 'joins' a
      # multicluster mesh, it will need to be migrated to the new mesh ID. Details
      # of migration TBD, and it may be a disruptive operation to change the Mesh
      # ID post-install.
      #
      # If the mesh admin does not specify a value, Istio will use the value of the
      # mesh's Trust Domain. The best practice is to select a proper Trust Domain
      # value.
      meshID: ""

      # Configure the mesh networks to be used by the Split Horizon EDS.
      #
      # The following example defines two networks with different endpoints association methods.
      # For `network1` all endpoints that their IP belongs to the provided CIDR range will be
      # mapped to network1. The gateway for this network example is specified by its public IP
      # address and port.
      # The second network, `network2`, in this example is defined differently with all endpoints
      # retrieved through the specified Multi-Cluster registry being mapped to network2. The
      # gateway is also defined differently with the name of the gateway service on the remote
      # cluster. The public IP for the gateway will be determined from that remote service (only
      # LoadBalancer gateway service type is currently supported, for a NodePort type gateway service,
      # it still need to be configured manually).
      #
      # meshNetworks:
      #   network1:
      #     endpoints:
      #     - fromCidr: "192.168.0.1/24"
      #     gateways:
      #     - address: 1.1.1.1
      #       port: 80
      #   network2:
      #     endpoints:
      #     - fromRegistry: reg1
      #     gateways:
      #     - registryServiceName: istio-ingressgateway.istio-system.svc.cluster.local
      #       port: 443
      #
      meshNetworks: {}

      # Use the user-specified, secret volume mounted key and certs for Pilot and workloads.
      mountMtlsCerts: false

      multiCluster:
        # Set to true to connect two kubernetes clusters via their respective
        # ingressgateway services when pods in each cluster cannot directly
        # talk to one another. All clusters should be using Istio mTLS and must
        # have a shared root CA for this model to work.
        enabled: false
        # Should be set to the name of the cluster this installation will run in. This is required for sidecar injection
        # to properly label proxies
        clusterName: ""

      # Network defines the network this cluster belong to. This name
      # corresponds to the networks in the map of mesh networks.
      network: ""

      # Configure the certificate provider for control plane communication.
      # Currently, two providers are supported: "kubernetes" and "istiod".
      # As some platforms may not have kubernetes signing APIs,
      # Istiod is the default
      pilotCertProvider: istiod

      sds:
        # The JWT token for SDS and the aud field of such JWT. See RFC 7519, section 4.1.3.
        # When a CSR is sent from Istio Agent to the CA (e.g. Istiod), this aud is to make sure the
        # JWT is intended for the CA.
        token:
          aud: istio-ca

      sts:
        # The service port used by Security Token Service (STS) server to handle token exchange requests.
        # Setting this port to a non-zero value enables STS server.
        servicePort: 0

      # The name of the CA for workload certificates.
      # For example, when caName=GkeWorkloadCertificate, GKE workload certificates
      # will be used as the certificates for workloads.
      # The default value is "" and when caName="", the CA will be configured by other
      # mechanisms (e.g., environmental variable CA_PROVIDER).
      caName: ""

      # whether to use autoscaling/v2 template for HPA settings
      # for internal usage only, not to be configured by users.
      autoscalingv2API: true
